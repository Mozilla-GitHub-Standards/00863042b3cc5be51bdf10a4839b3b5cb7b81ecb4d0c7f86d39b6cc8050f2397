? sasl-Makefile-diff.txt
Index: configure.in
===================================================================
RCS file: /cvs/src/sasl/configure.in,v
retrieving revision 1.220
diff -u -8 -p -r1.220 configure.in
--- configure.in	7 Apr 2011 08:50:31 -0000	1.220
+++ configure.in	19 Aug 2011 06:36:33 -0000
@@ -1,12 +1,12 @@
 dnl configure.in for the SASL library
 dnl Rob Siemborski
 dnl Rob Earhart
-dnl $Id: configure.in,v 1.220 2011/04/07 08:50:31 mel Exp $
+dnl $Id: configure.in,v 1.213.2.1 2009/04/27 17:58:25 murch Exp $
 dnl
 dnl Copyright (c) 2001 Carnegie Mellon University.  All rights reserved.
 dnl
 dnl Redistribution and use in source and binary forms, with or without
 dnl modification, are permitted provided that the following conditions
 dnl are met:
 dnl
 dnl 1. Redistributions of source code must retain the above copyright
@@ -54,17 +54,17 @@ fi
 AC_CONFIG_AUX_DIR(config)
 AC_CANONICAL_HOST
 AC_CANONICAL_TARGET
 
 dnl
 dnl REMINDER: When changing the version number here, please also update
 dnl the values in win32/include/config.h and include/sasl.h as well.
 dnl
-AM_INIT_AUTOMAKE(cyrus-sasl, 2.1.24)
+AM_INIT_AUTOMAKE(cyrus-sasl, 2.1.23)
 CMU_INIT_AUTOMAKE
 
 # and include our config dir scripts
 ACLOCAL="$ACLOCAL -I \$(top_srcdir)/config"
 
 DIRS=""
 
 AC_ARG_ENABLE(cmulocal,
@@ -96,17 +96,17 @@ if test "$with_staticsasl" = yes; then
 	enable_static=yes
 fi
 
 save_target=$target
 if test -z "$target"; then
 	target="NONE"
 fi
 
-# new libtool
+# new libtoolz
 AM_DISABLE_STATIC
 AC_PROG_LIBTOOL
 
 target=$save_target
 
 if test "$enable_static" = yes; then
 	SASL_STATIC_LIBS=libsasl2.a
 else
@@ -355,16 +355,54 @@ AC_ARG_ENABLE(alwaystrue, [  --enable-al
 		enable_alwaystrue=$enableval,
 		enable_alwaystrue=no)
 if test "$enable_alwaystrue" = yes; then
   AC_DEFINE(HAVE_ALWAYSTRUE, [], [Enable 'alwaystrue' password verifier?])
 fi
 AC_MSG_CHECKING(if I should include the alwaystrue verifier)
 AC_MSG_RESULT($enable_alwaystrue)
 
+
+
+dnl BROWSERID
+AC_ARG_ENABLE(browserid, [  --enable-browserid           enable BROWSERID of sasldb authentication [[yes]] ],
+  browserid=$enableval,
+  browserid=yes)
+
+AC_MSG_CHECKING(BROWSERID)
+if test "$browserid" != no; then
+  AC_MSG_RESULT(enabled)
+  SASL_MECHS="$SASL_MECHS libbrowserid.la"
+  if test "$enable_static" = yes; then
+    SASL_STATIC_OBJS="$SASL_STATIC_OBJS browserid.o"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/browserid.c"
+    AC_DEFINE(STATIC_BROWSERID, [], [Link BROWSERID Staticly])
+  fi
+else
+  AC_MSG_RESULT(disabled)
+fi
+
+
 dnl sasl_checkapop support
 AC_ARG_ENABLE(checkapop, [  --enable-checkapop      enable use of sasl_checkapop [[yes]] ],
   checkapop=$enableval,
   checkapop=yes)
 
 AC_MSG_CHECKING(if we should enable sasl_checkapop)
 if test "$checkapop" != no; then
   AC_MSG_RESULT(enabled)
@@ -379,17 +417,17 @@ AC_ARG_ENABLE(cram, [  --enable-cram    
   cram=yes)
 
 AC_MSG_CHECKING(CRAM-MD5)
 if test "$cram" != no; then
   AC_MSG_RESULT(enabled)
   SASL_MECHS="$SASL_MECHS libcrammd5.la"
   if test "$enable_static" = yes; then
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS cram.o"
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/cram.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/cram.c"
     AC_DEFINE(STATIC_CRAMMD5, [], [Link CRAM-MD5 Staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
 CMU_HAVE_OPENSSL
 AC_MSG_CHECKING(for OpenSSL)
@@ -413,51 +451,24 @@ if test "$digest" != no; then
   fi
 fi
 
 AC_MSG_CHECKING(DIGEST-MD5)
 if test "$digest" != no; then
   AC_MSG_RESULT(enabled)
   SASL_MECHS="$SASL_MECHS libdigestmd5.la"
   if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/digestmd5.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/digestmd5.c"
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS digestmd5.o"
     AC_DEFINE(STATIC_DIGESTMD5, [], [Link DIGEST-MD5 Staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
-dnl SCRAM
-AC_ARG_ENABLE(scram, [  --enable-scram            enable SCRAM authentication [[yes]] ],
-  scram=$enableval,
-  scram=yes)
-
-if test "$with_openssl" = no; then
-  AC_WARN([OpenSSL not found -- SCRAM will be disabled])
-  scram=no
-fi
-
-AC_MSG_CHECKING(SCRAM)
-if test "$scram" != no; then
-  AC_MSG_RESULT(enabled)
-  SCRAM_LIBS="-lcrypto $LIB_RSAREF"
-
-  SASL_MECHS="$SASL_MECHS libscram.la"
-  if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/scram.c"
-    SASL_STATIC_OBJS="$SASL_STATIC_OBJS scram.o"
-    AC_DEFINE(STATIC_SCRAM, [], [Link SCRAM Staticly])
-  fi
-
-  AC_SUBST(SCRAM_LIBS)
-else
-  AC_MSG_RESULT(disabled)
-fi
-
 dnl OTP
 AC_ARG_ENABLE(otp, [  --enable-otp            enable OTP authentication [[yes]] ],
   otp=$enableval,
   otp=yes)
 
 if test "$with_openssl" = no; then
   AC_WARN([OpenSSL not found -- OTP will be disabled])
   otp=no
@@ -465,17 +476,17 @@ fi
 
 AC_MSG_CHECKING(OTP)
 if test "$otp" != no; then
   AC_MSG_RESULT(enabled)
   OTP_LIBS="-lcrypto $LIB_RSAREF"
 
   SASL_MECHS="$SASL_MECHS libotp.la"
   if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/otp.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/otp.c"
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS otp.o"
     AC_DEFINE(STATIC_OTP, [], [Link OTP Staticly])
   fi
 
   dnl Test for OPIE
   AC_ARG_WITH(with-opie,[  --with-opie=PATH        use OPIE (One Time Passwords in Everything) from PATH],
 	with_opie="${withval}")
 
@@ -522,21 +533,22 @@ fi
 
 AC_MSG_CHECKING(SRP)
 if test "$srp" != no; then
   AC_MSG_RESULT(enabled)
   SRP_LIBS="-lcrypto $LIB_RSAREF"
 
   SASL_MECHS="$SASL_MECHS libsrp.la"
   if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/srp.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/srp.c"
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS srp.o"
     AC_DEFINE(STATIC_SRP, [], [Link SRP Staticly])
   fi
 
+
 dnl srp_setpass support
   AC_ARG_ENABLE(srp_setpass, [  --enable-srp-setpass    enable setting SRP secrets with saslpasswd [[no]]],
       srp_setpass=$enableval,
       srp_setpass=no)
 
   AC_MSG_CHECKING(if we should enable setting SRP secrets with saslpasswd)
   if test "$srp_setpass" != no; then
     AC_MSG_RESULT(enabled)
@@ -579,34 +591,34 @@ AC_ARG_ENABLE(anon, [  --enable-anon    
   anon=yes)
 
 AC_MSG_CHECKING(ANONYMOUS)
 if test "$anon" != no; then
   AC_MSG_RESULT(enabled)
   SASL_MECHS="$SASL_MECHS libanonymous.la"
   if test "$enable_static" = yes; then
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS anonymous.o"
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/anonymous.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/anonymous.c"
     AC_DEFINE(STATIC_ANONYMOUS, [], [Link ANONYMOUS Staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
 dnl LOGIN
 AC_ARG_ENABLE(login, [  --enable-login          enable unsupported LOGIN authentication [[no]] ],
   login=$enableval,
   login=no)
 
 AC_MSG_CHECKING(LOGIN)
 if test "$login" != no; then
   AC_MSG_RESULT(enabled)
   SASL_MECHS="$SASL_MECHS liblogin.la"
   if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/login.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/login.c"
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS login.o"
     AC_DEFINE(STATIC_LOGIN,[],[Link LOGIN Staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
 dnl NTLM
@@ -622,17 +634,17 @@ fi
 AC_MSG_CHECKING(NTLM)
 if test "$ntlm" != no; then
   AC_MSG_RESULT(enabled)
   NTLM_LIBS="-lcrypto $LIB_RSAREF"
   AC_SUBST(NTLM_LIBS)
 
   SASL_MECHS="$SASL_MECHS libntlm.la"
   if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/ntlm.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/ntlm.c"
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS ntlm.o"
     AC_DEFINE(STATIC_NTLM,[],[Link NTLM Staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
 dnl PASSDSS
@@ -649,17 +661,17 @@ AC_MSG_CHECKING(PASSDSS)
 if test "$passdss" != no; then
   AC_MSG_RESULT(enabled)
   PASSDSS_LIBS="-lcrypto $LIB_RSAREF"
   AC_SUBST(PASSDSS_LIBS)
 
   SASL_MECHS="$SASL_MECHS libpassdss.la"
   if test "$enable_static" = yes; then
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS passdss.o"
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/passdss.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/passdss.c"
     AC_DEFINE(STATIC_PASSDSS,[],[Link PASSDSS Staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
 
 # make the option show up so people don't whine that it is only in the
@@ -679,17 +691,17 @@ AC_ARG_ENABLE(sql, [  --enable-sql      
   sql=$enableval,
   sql=no)
 
 AC_MSG_CHECKING(SQL)
 if test "$sql" != no; then
   AC_MSG_RESULT(enabled)
   SASL_MECHS="$SASL_MECHS libsql.la"
   if test "$enable_static" = yes; then
-    SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/sql.c"
+    SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/sql.c"
     SASL_STATIC_OBJS="$SASL_STATIC_OBJS sql.o"
     AC_DEFINE(STATIC_SQL,[],[Link SQL plugin staticly])
   fi
 else
   AC_MSG_RESULT(disabled)
 fi
 
 dnl MySQL
@@ -868,70 +880,18 @@ case "$with_sqlite" in
        AC_CHECK_LIB(sqlite, sqlite_open, AC_DEFINE(HAVE_SQLITE,[],
 	   [Do we have SQLite support?]),
            [AC_WARN([SQLite Library sqlite does not work])
 	    with_sqlite=no], $LIB_SQLITE_DIR);;
          
 esac
 AC_SUBST(LIB_SQLITE)
 
-dnl SQLite3
-AC_ARG_WITH(sqlite3,  [  --with-sqlite3=PATH       use SQLite3 from PATH ],
-  with_sqlite3=$withval,
-  with_sqlite3=$sql)
-
-# find location of library 
-# we assume that if one given then it is correct
-if test "${with_sqlite3}" = "yes"; then
-  with_sqlite3=notfound
-  for sqlite3loc in lib
-  do
-    if test -f ${prefix}/${sqlite3loc}/libsqlite3.a; then
-      with_sqlite3="${prefix}"
-      break
-    elif test -f /usr/local/${sqlite3loc}/libsqlite3.a; then
-      with_sqlite3="/usr/local"
-      break
-    elif test -f /usr/${sqlite3loc}/libsqlite3.a; then
-      with_sqlite3="/usr"
-      break
-    fi
-  done
-fi
-
-LIB_SQLITE3=""
-
-case "$with_sqlite3" in
-    no) true;;
-    notfound) AC_WARN([SQLite3 Library not found]); true;;
-    *)
-     if test -d ${with_sqlite3}/lib; then
-         LIB_SQLITE3="-L${with_sqlite3}/lib -R${with_sqlite3}/lib"
-     else
-         LIB_SQLITE3="-L${with_sqlite3} -R${with_sqlite3}"
-     fi
-
-     LIB_SQLITE3_DIR=$LIB_SQLITE3
-     LIB_SQLITE3="$LIB_SQLITE3 -lsqlite3"
-
-     if test -d ${with_sqlite3}/include; then
-         CPPFLAGS="${CPPFLAGS} -I${with_sqlite3}/include"
-     else
-         CPPFLAGS="${CPPFLAGS} -I${with_sqlite3}"
-     fi
-       AC_CHECK_LIB(sqlite3, sqlite3_open, AC_DEFINE(HAVE_SQLITE3,[],
-	   [Do we have SQLite3 support?]),
-           [AC_WARN([SQLite3 Library sqlite3 does not work])
-	    with_sqlite3=no], $LIB_SQLITE3_DIR);;
-         
-esac
-AC_SUBST(LIB_SQLITE3)
-
-if test "$sql" = yes -a "$with_pgsql" = no -a "$with_mysql" = no -a "$with_sqlite" = no -a "$with_sqlite3" = no; then
-    AC_ERROR([--enable-sql chosen but neither Postgres nor MySQL nor SQLite nor SQLite3 found])
+if test "$sql" = yes -a "$with_pgsql" = no -a "$with_mysql" = no -a "$with_sqlite" = no; then
+    AC_ERROR([--enable-sql chosen but neither Postgres nor MySQL nor SQLite found])
 fi
 
 if test "$enable_shared" = yes; then
 	AC_DEFINE(DO_DLOPEN,[],[Should we build a shared plugin (via dlopen) library?])
 fi
 
 dnl LDAPDB
 AC_ARG_ENABLE(ldapdb, [  --enable-ldapdb         enable LDAPDB plugin [no] ],
@@ -971,17 +931,17 @@ if test "$ldapdb" != no; then
         if test "$cmu_cv_openldap_compat" = no; then
             AC_MSG_ERROR([Cannot enable LDAPDB plugin: OpenLDAP library located but incompatible])
         else
             LIB_LDAP=$cmu_link_openldap
             AC_SUBST(LIB_LDAP)
 
             SASL_MECHS="$SASL_MECHS libldapdb.la"
             if test "$enable_static" = yes; then
-                SASL_STATIC_SRCS="$SASL_STATIC_SRCS \$(top_srcdir)/plugins/ldapdb.c"
+                SASL_STATIC_SRCS="$SASL_STATIC_SRCS ../plugins/ldapdb.c"
                 SASL_STATIC_OBJS="$SASL_STATIC_OBJS ldapdb.o"
                 AC_DEFINE(STATIC_LDAPDB,[],[Link ldapdb plugin Staticly])
             fi
         fi
     fi
 
     if test "$cmu_cv_openldap_compat" != yes; then
         CPPFLAGS=$save_CPPFLAGS
@@ -1189,17 +1149,17 @@ AC_HEADER_SYS_WAIT
 AC_CHECK_HEADERS(des.h dlfcn.h fcntl.h limits.h malloc.h paths.h strings.h sys/file.h sys/time.h syslog.h unistd.h inttypes.h sys/uio.h sys/param.h sysexits.h stdarg.h varargs.h)
 
 IPv6_CHECK_SS_FAMILY()
 IPv6_CHECK_SA_LEN()
 IPv6_CHECK_SOCKLEN_T()
 
 #AC_FUNC_MEMCMP
 #AC_FUNC_VPRINTF
-AC_CHECK_FUNCS(gethostname getdomainname getpwnam getspnam gettimeofday inet_aton memcpy mkdir select socket strchr strdup strerror strspn strstr strtol jrand48 getpassphrase)
+AC_CHECK_FUNCS(gethostname getdomainname getpwnam getspnam gettimeofday inet_aton memcpy mkdir select socket strchr strdup strerror strspn strstr strtol jrand48)
 
 if test $enable_cmulocal = yes; then
     AC_WARN([enabling CMU local kludges])
     AC_DEFINE(KRB4_IGNORE_IP_ADDRESS,[],[Ignore IP Address in Kerberos 4 tickets?])
     AC_DEFINE_UNQUOTED(PREFER_MECH, "KERBEROS_V4", [Force a preferred mechanism])
 fi
 
 AC_EGREP_HEADER(sockaddr_storage, sys/socket.h, [
Index: plugins/makeinit.sh
===================================================================
RCS file: /cvs/src/sasl/plugins/makeinit.sh,v
retrieving revision 1.14
diff -u -8 -p -r1.14 makeinit.sh
--- plugins/makeinit.sh	12 Apr 2011 10:29:59 -0000	1.14
+++ plugins/makeinit.sh	19 Aug 2011 06:36:33 -0000
@@ -1,10 +1,10 @@
 # mechanism plugins
-for mech in anonymous crammd5 digestmd5 scram gssapiv2 kerberos4 login ntlm otp passdss plain srp gs2; do
+for mech in anonymous crammd5 browserid digestmd5 scram gssapiv2 kerberos4 login ntlm otp passdss plain srp gs2; do
 
 echo "
 #include <config.h>
 
 #include <string.h>
 #include <stdlib.h>
 #include <stdio.h>
 #ifndef macintosh
